{"mappings":"AAaaA,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAW,IAAIC,SAASH,EAAMI,QAC9BC,EAASH,EAASI,IAAI,UACtBC,EAAaC,SAASN,EAASI,IAAI,UACnCG,EAAYD,SAASN,EAASI,IAAI,UAExC,SAASI,EAAuBC,GAC9B,GAAIA,EAAWN,EACb,OA1BN,IAAuBO,EAAUC,GAAVD,EA+BLD,EA/BeE,EA6BRN,EAAaE,GAAaE,EAAW,GA5BrD,IAAIG,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,KAuBNQ,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MACjBS,QAAQC,IAAI,uBAAqBX,QAAiBC,MAAU,IAE7DW,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MAClBS,QAAQC,IAAI,sBAAoBX,QAAeC,MAAU,IAE1DY,SAAQ,KACPf,EAAuBC,EAAW,EAAE,G,CAI1CD,CAAuB,E","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const formData = new FormData(event.target);\n  const amount = formData.get('amount');\n  const firstDelay = parseInt(formData.get('delay'));\n  const delayStep = parseInt(formData.get('step'));\n\n  function createAndHandlePromise(position) {\n    if (position > amount) {\n      return;\n    }\n\n    const currentDelay = firstDelay + delayStep * (position - 1);\n\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      .finally(() => {\n        createAndHandlePromise(position + 1);\n      });\n  }\n\n  createAndHandlePromise(1);\n}"],"names":["document","querySelector","addEventListener","event","preventDefault","formData","FormData","target","amount","get","firstDelay","parseInt","delayStep","createAndHandlePromise","position1","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","console","log","catch","finally"],"version":3,"file":"03-promises.e65442b7.js.map"}